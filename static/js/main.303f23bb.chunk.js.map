{"version":3,"sources":["components/Note/styles.module.css","components/NewNote/styles.module.css","components/Notes/styles.module.css","utils/notesModule/index.tsx","components/NewNote/NewNote.tsx","components/Note/Note.tsx","components/NoteDetails/components/NoteDetailsEditMode.tsx","components/NoteDetails/components/NoteDetailsViewMode.tsx","assets/svg/back.svg","components/NoteDetails/components/NoteDetailsBackButton.tsx","assets/svg/save.svg","components/NoteDetails/components/NoteDetailsSaveButton.tsx","assets/svg/edit.svg","components/NoteDetails/components/NoteDetailsEditButton.tsx","assets/svg/delete.svg","components/NoteDetails/components/NoteDetailsDeleteButton.tsx","components/NoteDetails/NoteDetails.tsx","components/Notes/Notes.tsx","App.tsx","index.tsx","components/NoteDetails/styles.module.css"],"names":["module","exports","NotesContext","createContext","NOTES_KEY","initialState","JSON","parse","localStorage","getItem","NotesProvider","children","useState","notes","setNotes","undefined","notesDetailsId","setNotesDetailsId","modalMode","setModalMode","useEffect","setItem","stringify","Provider","value","useNotes","useContext","getAllIds","useCallback","map","id","get","find","note","save","source","add","length","remove","filter","useNotesModal","isModalOpen","useMemo","NewNote","createAndOpenNewNote","className","styles","newNote","onClick","Note","noteId","openNote","sourcePos","noteContent","NoteDetailsEditMode","setValue","onChange","e","target","style","width","height","NoteDetailsViewMode","NoteDetailsBackButton","closeNote","src","Back","alt","action","title","NoteDetailsSaveButton","saveNote","Save","NoteDetailsEditButton","changeModeToEdit","Edit","NoteDetailsDeleteButton","deleteNote","Delete","NoteDetails","noteDetailsWrapper","noteDetails","actionsRow","details","Notes","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.303f23bb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"styles_note__3m1zR\",\"noteContent\":\"styles_noteContent__WXNot\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newNote\":\"styles_newNote__2aJvM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notes\":\"styles_notes__3MIlw\"};","import { createContext, FC, useCallback, useContext, useEffect, useMemo, useState } from 'react';\r\nimport { INote } from './model';\r\n\r\ninterface INotesContext {\r\n    notes: INote[];\r\n    setNotes: (notes: INote[]) => void;\r\n    notesDetailsId: number | undefined;\r\n    setNotesDetailsId: (id: number | undefined) => void;\r\n    modalMode: 'view' | 'edit';\r\n    setModalMode: (mode: 'view' | 'edit') => void;\r\n}\r\n\r\nconst NotesContext = createContext({} as INotesContext);\r\n\r\nconst NOTES_KEY = 'notes';\r\n\r\nconst initialState = JSON.parse(localStorage.getItem(NOTES_KEY) as string) ?? [];\r\n\r\nexport const NotesProvider: FC = ({ children }) => {\r\n    const [notes, setNotes] = useState<INote[]>(initialState);\r\n    const [notesDetailsId, setNotesDetailsId] = useState<number | undefined>(undefined);\r\n    const [modalMode, setModalMode] = useState<'view' | 'edit'>('view');\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(NOTES_KEY, JSON.stringify(notes));\r\n    }, [notes]);\r\n\r\n    return (\r\n        <NotesContext.Provider value={{ notes, setNotes, notesDetailsId, setNotesDetailsId, modalMode, setModalMode }}>\r\n            {children}\r\n        </NotesContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useNotes = () => {\r\n    const { notes, setNotes } = useContext(NotesContext);\r\n    const getAllIds = useCallback(() => notes.map(({ id }) => id), [notes]);\r\n\r\n    const get = useCallback((id: number) => notes.find((note) => note.id === id) as INote, [notes]);\r\n\r\n    const save = useCallback(\r\n        (id: number, source: string) => {\r\n            setNotes(notes.map((note) => (note.id === id ? { ...note, source } : note)));\r\n        },\r\n        [notes, setNotes]\r\n    );\r\n\r\n    const add = useCallback(\r\n        (source: string) => {\r\n            const id = (notes[notes.length - 1]?.id ?? -1) + 1;\r\n            setNotes([...notes, { id, source }]);\r\n            return id;\r\n        },\r\n        [notes, setNotes]\r\n    );\r\n\r\n    const remove = useCallback(\r\n        (id: number) => {\r\n            setNotes(notes.filter((note) => note.id !== id));\r\n        },\r\n        [notes, setNotes]\r\n    );\r\n\r\n    return {\r\n        getAllIds,\r\n        get,\r\n        save,\r\n        add,\r\n        remove,\r\n    };\r\n};\r\n\r\nexport const useNotesModal = () => {\r\n    const { notesDetailsId, setNotesDetailsId, setModalMode, modalMode } = useContext(NotesContext);\r\n\r\n    const isModalOpen = useMemo(() => notesDetailsId !== undefined, [notesDetailsId]);\r\n\r\n    return {\r\n        isModalOpen,\r\n        notesDetailsId,\r\n        setNotesDetailsId,\r\n        modalMode,\r\n        setModalMode,\r\n    };\r\n};\r\n","import { FC, useCallback } from 'react';\r\nimport { useNotes, useNotesModal } from '../../utils/notesModule';\r\nimport styles from './styles.module.css';\r\n\r\nconst defaultNoteContent = `This is a note\r\n===========\r\n&nbsp;  \r\nSubtitle\r\n------------\r\n&nbsp;  \r\nShopping list:\r\n* apples\r\n* oranges\r\n* toilet paper\r\n`;\r\n\r\nexport const NewNote: FC = () => {\r\n    const { add } = useNotes();\r\n    const { setNotesDetailsId, setModalMode } = useNotesModal();\r\n\r\n    const createAndOpenNewNote = useCallback(() => {\r\n        const id = add(defaultNoteContent);\r\n        setModalMode('edit');\r\n        setNotesDetailsId(id);\r\n    }, [add, setModalMode, setNotesDetailsId]);\r\n    return (\r\n        <div className={styles.newNote} onClick={createAndOpenNewNote}>+</div>\r\n    );\r\n};\r\n","import { FC, useCallback, useMemo } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\nimport { useNotes, useNotesModal } from '../../utils/notesModule';\r\nimport styles from './styles.module.css';\r\n\r\ninterface INoteProps {\r\n    noteId: number;\r\n}\r\n\r\nexport const Note: FC<INoteProps> = ({ noteId }) => {\r\n    const { get } = useNotes();\r\n    const { setNotesDetailsId, setModalMode } = useNotesModal();\r\n\r\n    const { id, source } = useMemo(() => {\r\n        return get(noteId);\r\n    }, [get, noteId]);\r\n\r\n    const openNote = useCallback(() => {\r\n        setModalMode('view');\r\n        setNotesDetailsId(id);\r\n    }, [id, setModalMode, setNotesDetailsId]);\r\n\r\n    return (\r\n        <div className={styles.note} onClick={openNote}>\r\n            <ReactMarkdown sourcePos className={styles.noteContent}>\r\n                {source}\r\n            </ReactMarkdown>\r\n        </div>\r\n    );\r\n};\r\n","import { FC, useCallback } from 'react';\r\n\r\ninterface INoteDetailsEditModeProps {\r\n    value: string;\r\n    setValue: (val: string) => void;\r\n}\r\n\r\nexport const NoteDetailsEditMode: FC<INoteDetailsEditModeProps> = ({ value, setValue }) => {\r\n    const onChange = useCallback(\r\n        (e) => {\r\n            setValue(e.target.value);\r\n        },\r\n        [setValue]\r\n    );\r\n    return <textarea value={value} onChange={onChange} style={{ width: '100%', height: '100%' }}></textarea>;\r\n};","import { FC } from 'react';\r\nimport ReactMarkdown from 'react-markdown';\r\n\r\ninterface INoteDetailsViewModeProps {\r\n    value: string;\r\n}\r\n\r\nexport const NoteDetailsViewMode: FC<INoteDetailsViewModeProps> = ({ value }) => {\r\n    return <ReactMarkdown>{value}</ReactMarkdown>;\r\n};","export default __webpack_public_path__ + \"static/media/back.6b1d965b.svg\";","import styles from '../styles.module.css';\r\nimport Back from '../../../assets/svg/back.svg';\r\nimport { useCallback } from 'react';\r\nimport { useNotesModal } from '../../../utils/notesModule';\r\n\r\n\r\nexport const NoteDetailsBackButton = () => {\r\n    const { setNotesDetailsId  } = useNotesModal();\r\n\r\n    const closeNote = useCallback(() => {\r\n        setNotesDetailsId(undefined);\r\n    }, [setNotesDetailsId]);\r\n    return (\r\n        <img src={Back} alt=\"Back action\" className={styles.action} title=\"Back\" onClick={closeNote} />\r\n    );\r\n};\r\n","export default __webpack_public_path__ + \"static/media/save.563e3c29.svg\";","import styles from '../styles.module.css';\r\nimport Save from '../../../assets/svg/save.svg';\r\nimport { FC, useCallback } from 'react';\r\nimport { useNotes, useNotesModal } from '../../../utils/notesModule';\r\n\r\ninterface INoteDetailsSaveButtonProps {\r\n    value: string;\r\n}\r\n\r\nexport const NoteDetailsSaveButton: FC<INoteDetailsSaveButtonProps> = ({ value }) => {\r\n    const { save } = useNotes();\r\n    const { setModalMode, notesDetailsId } = useNotesModal();\r\n\r\n    const saveNote = useCallback(() => {\r\n        save(notesDetailsId as number, value);\r\n        setModalMode('view');\r\n    }, [notesDetailsId, save, setModalMode, value]);\r\n\r\n    return <img src={Save} alt=\"Save action\" className={styles.action} title=\"Save\" onClick={saveNote} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/edit.f95b2ea7.svg\";","import styles from '../styles.module.css';\r\nimport Edit from '../../../assets/svg/edit.svg';\r\nimport { FC, useCallback } from 'react';\r\nimport { useNotesModal } from '../../../utils/notesModule';\r\n\r\nexport const NoteDetailsEditButton: FC = () => {\r\n    const { setModalMode } = useNotesModal();\r\n\r\n    const changeModeToEdit = useCallback(() => setModalMode('edit'), [setModalMode]);\r\n\r\n    return <img src={Edit} alt=\"Edit action\" className={styles.action} title=\"Edit\" onClick={changeModeToEdit} />;\r\n};\r\n","export default __webpack_public_path__ + \"static/media/delete.832245fc.svg\";","import styles from '../styles.module.css';\r\nimport Delete from '../../../assets/svg/delete.svg';\r\nimport { FC, useCallback } from 'react';\r\nimport { useNotes, useNotesModal } from '../../../utils/notesModule';\r\n\r\nexport const NoteDetailsDeleteButton: FC = () => {\r\n    const { setNotesDetailsId, notesDetailsId } = useNotesModal();\r\n    const { remove } = useNotes();\r\n\r\n    const deleteNote = useCallback(() => {\r\n        remove(notesDetailsId as number);\r\n        setNotesDetailsId(undefined);\r\n    }, [notesDetailsId, remove, setNotesDetailsId]);\r\n\r\n    return <img\r\n        src={Delete}\r\n        alt=\"Delete action\"\r\n        className={styles.action}\r\n        title=\"Delete\"\r\n        onClick={deleteNote}\r\n    />;\r\n};\r\n","import { FC, useState, useEffect } from 'react';\r\nimport styles from './styles.module.css';\r\nimport { useNotes, useNotesModal } from '../../utils/notesModule';\r\nimport { NoteDetailsEditMode } from './components/NoteDetailsEditMode';\r\nimport { NoteDetailsViewMode } from './components/NoteDetailsViewMode';\r\nimport { NoteDetailsBackButton } from './components/NoteDetailsBackButton';\r\nimport { NoteDetailsSaveButton } from './components/NoteDetailsSaveButton';\r\nimport { NoteDetailsEditButton } from './components/NoteDetailsEditButton';\r\nimport { NoteDetailsDeleteButton } from './components/NoteDetailsDeleteButton';\r\n\r\nexport const NoteDetails: FC = () => {\r\n    const { notesDetailsId } = useNotesModal();\r\n    const noteId = notesDetailsId as number;\r\n    const [value, setValue] = useState<string>('');\r\n    const { get } = useNotes();\r\n    const { modalMode } = useNotesModal();\r\n\r\n    useEffect(() => {\r\n        const note = get(noteId);\r\n        setValue(note.source);\r\n    }, [get, noteId]);\r\n\r\n    return (\r\n        <div className={styles.noteDetailsWrapper}>\r\n            <div className={styles.noteDetails}>\r\n                <div className={styles.actionsRow}>\r\n                    <NoteDetailsBackButton />\r\n                    {modalMode === 'edit' ? (\r\n                        <NoteDetailsSaveButton value={value}  />\r\n                    ) : (\r\n                        <NoteDetailsEditButton />\r\n                    )}\r\n                    <NoteDetailsDeleteButton />\r\n                </div>\r\n                <div className={styles.details}>\r\n                    {modalMode === 'edit' ? (\r\n                        <NoteDetailsEditMode value={value} setValue={setValue} />\r\n                    ) : (\r\n                        <NoteDetailsViewMode value={value} />\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { useNotes, useNotesModal } from '../../utils/notesModule';\r\nimport { NewNote } from '../NewNote/NewNote';\r\nimport { Note } from '../Note/Note';\r\nimport { NoteDetails } from '../NoteDetails/NoteDetails';\r\nimport styles from './styles.module.css';\r\n\r\nexport const Notes: FC = () => {\r\n    const { getAllIds } = useNotes();\r\n    const { isModalOpen } = useNotesModal();\r\n\r\n    return (\r\n        <>\r\n            <div className={styles.notes}>\r\n                <NewNote />\r\n                {getAllIds().map((id) => (\r\n                    <Note key={id} noteId={id} />\r\n                ))}\r\n            </div>\r\n            {isModalOpen && (\r\n                <NoteDetails />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n","import { FC } from 'react';\r\nimport { Notes } from './components/Notes/Notes';\r\n\r\nexport const App: FC = () => {\r\n    return (\r\n        <>\r\n            <header>\r\n                <h1>Notes app</h1>\r\n            </header>\r\n            <main>\r\n                <Notes/>\r\n            </main>\r\n            <footer>\r\n                <span>Made by: Matko Piškor</span>\r\n            </footer>\r\n        </>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\nimport './styles.css';\r\nimport { NotesProvider } from './utils/notesModule';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <NotesProvider>\r\n            <App />\r\n        </NotesProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noteDetailsWrapper\":\"styles_noteDetailsWrapper__1d47W\",\"noteDetails\":\"styles_noteDetails__r2jZN\",\"actionsRow\":\"styles_actionsRow__1cIxT\",\"action\":\"styles_action__38z8F\",\"details\":\"styles_details__pUmlY\"};"],"sourceRoot":""}